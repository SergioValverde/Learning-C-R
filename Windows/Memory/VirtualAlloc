#include <stdio.h>
#include <stdlib.h>
#include <windows.h>
#include <stddef.h>


int main(void)
{
	char* cString = "i like this code ;)";

	
	LPVOID p = VirtualAlloc(NULL, 1000, MEM_COMMIT | MEM_RESERVE, PAGE_READWRITE);

	if (p == NULL) {
		
		printf("Valor Null"); 
		
		return -1;
	}
	else {
		printf(" |--- [+] RWX memory allocated: 0x%p\n", p);
	
	}

	memcpy(p, cString, strlen(cString));

	VirtualFree(p, 1000, MEM_DECOMMIT);
	
	return 0;
}

--------------


Using RtlMoveMemory

#include <stdio.h>
#include <stdlib.h>
#include <windows.h>
#include <stddef.h>


int main(void)
{
    char* cString = "i like this code ;)";

    
    LPVOID p = VirtualAlloc(NULL, sizeof(cString), MEM_COMMIT | MEM_RESERVE, PAGE_READWRITE);

    if (p == NULL) {
        
        printf("Valor Null"); 
        
        return -1;
    }
    else {
        printf(" |--- [+] RWX memory allocated: 0x%p\n", p);
    
    }

    RtlMoveMemory(p, cString, sizeof(cString));

    return 0;
}
